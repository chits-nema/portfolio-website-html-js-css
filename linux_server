# linux_server.py
from flask import Flask, request, jsonify
import cv2
import supervision as sv
from ultralytics import YOLO
import numpy as np

app = Flask(__name__)

# Load YOLO model once at startup
print("Loading YOLO model...")
model = YOLO('yolov8n.pt')  # Downloads automatically first time
print("Model loaded!")

@app.route('/process', methods=['POST'])
def process_image():
    try:
        # Receive and decode image
        img_data = request.files['image'].read()
        img_array = np.frombuffer(img_data, np.uint8)
        img = cv2.imdecode(img_array, cv2.IMREAD_COLOR)
        
        # Run YOLO detection
        results = model(img)
        
        # Use supervision for processing
        detections = sv.Detections.from_ultralytics(results[0])
        
        # Extract detection info
        detection_data = {
            'num_detections': len(detections),
            'boxes': detections.xyxy.tolist() if len(detections) > 0 else [],
            'confidence': detections.confidence.tolist() if len(detections) > 0 else [],
            'class_ids': detections.class_id.tolist() if len(detections) > 0 else []
        }
        
        return jsonify({
            'status': 'success',
            'detections': detection_data,
            'image_shape': img.shape
        })
        
    except Exception as e:
        return jsonify({'error': str(e)})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
